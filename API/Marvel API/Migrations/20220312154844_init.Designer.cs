// <auto-generated />
using Marvel_API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Marvel_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220312154844_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Marvel_API.Models.Champions.AllyTips", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId");

                    b.ToTable("allytypes");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Champion", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("blurb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("partype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Champion");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Champions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aatroxid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ahriid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Akaliid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Alistarid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Amumuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Aniviaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Annieid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apheliosid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Asheid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AurelionSolid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Azirid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Bardid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Blitzcrankid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brandid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Braumid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Caitlynid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Camilleid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cassiopeiaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Chogathid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Corkiid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dariusid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dianaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DrMundoid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dravenid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ekkoid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Eliseid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Evelynnid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ezrealid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fiddlesticksid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fioraid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fizzid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Galioid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Gangplankid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Garenid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Gnarid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Gragasid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Gravesid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Hecarimid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Heimerdingerid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Illaoiid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ireliaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ivernid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Jannaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JarvanIVid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Jaxid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Jayceid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Jhinid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Jinxid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KaiSaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Kalistaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Karmaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Karthusid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Kassadinid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Katarinaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Kayleid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Kaynid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Kennenid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Khazixid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Kindredid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Kledid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KogMawid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LeBlancid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LeeSinid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Leonaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Lilliaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Lissandraid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Lucianid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Luluid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Luxid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Malphiteid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Malzaharid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Maokaiid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MasterYiid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MissFortuneid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MonkeyKingid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Mordekaiserid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Morganaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Namiid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nasusid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nautilusid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Neekoid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nidaleeid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nocturneid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nunuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Olafid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Oriannaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ornnid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Pantheonid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Poppyid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Pykeid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Qiyanaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Quinnid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rakanid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rammusid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RekSaiid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rellid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Renektonid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rengarid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rivenid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rumbleid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ryzeid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Samiraid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sejuaniid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sennaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Seraphineid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Settid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Shacoid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Shenid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Shyvanaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Singedid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sionid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sivirid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Skarnerid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sonaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sorakaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Swainid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sylasid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Syndraid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TahmKenchid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Taliyahid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Talonid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Taricid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Teemoid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Threshid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tristanaid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Trundleid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tryndamereid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TwistedFateid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Twitchid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Udyrid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Urgotid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Varusid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Vayneid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Veigarid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VelKozid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Viegoid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Viid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Viktorid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Vladimirid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Volibearid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Warwickid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Xayahid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Xerathid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("XinZhaoid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Yasuoid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Yoneid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Yorickid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Yuumiid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Zacid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Zedid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ziggsid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Zileanid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Zoeid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Zyraid")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Aatroxid");

                    b.HasIndex("Ahriid");

                    b.HasIndex("Akaliid");

                    b.HasIndex("Alistarid");

                    b.HasIndex("Amumuid");

                    b.HasIndex("Aniviaid");

                    b.HasIndex("Annieid");

                    b.HasIndex("Apheliosid");

                    b.HasIndex("Asheid");

                    b.HasIndex("AurelionSolid");

                    b.HasIndex("Azirid");

                    b.HasIndex("Bardid");

                    b.HasIndex("Blitzcrankid");

                    b.HasIndex("Brandid");

                    b.HasIndex("Braumid");

                    b.HasIndex("Caitlynid");

                    b.HasIndex("Camilleid");

                    b.HasIndex("Cassiopeiaid");

                    b.HasIndex("Chogathid");

                    b.HasIndex("Corkiid");

                    b.HasIndex("Dariusid");

                    b.HasIndex("Dianaid");

                    b.HasIndex("DrMundoid");

                    b.HasIndex("Dravenid");

                    b.HasIndex("Ekkoid");

                    b.HasIndex("Eliseid");

                    b.HasIndex("Evelynnid");

                    b.HasIndex("Ezrealid");

                    b.HasIndex("Fiddlesticksid");

                    b.HasIndex("Fioraid");

                    b.HasIndex("Fizzid");

                    b.HasIndex("Galioid");

                    b.HasIndex("Gangplankid");

                    b.HasIndex("Garenid");

                    b.HasIndex("Gnarid");

                    b.HasIndex("Gragasid");

                    b.HasIndex("Gravesid");

                    b.HasIndex("Hecarimid");

                    b.HasIndex("Heimerdingerid");

                    b.HasIndex("Illaoiid");

                    b.HasIndex("Ireliaid");

                    b.HasIndex("Ivernid");

                    b.HasIndex("Jannaid");

                    b.HasIndex("JarvanIVid");

                    b.HasIndex("Jaxid");

                    b.HasIndex("Jayceid");

                    b.HasIndex("Jhinid");

                    b.HasIndex("Jinxid");

                    b.HasIndex("KaiSaid");

                    b.HasIndex("Kalistaid");

                    b.HasIndex("Karmaid");

                    b.HasIndex("Karthusid");

                    b.HasIndex("Kassadinid");

                    b.HasIndex("Katarinaid");

                    b.HasIndex("Kayleid");

                    b.HasIndex("Kaynid");

                    b.HasIndex("Kennenid");

                    b.HasIndex("Khazixid");

                    b.HasIndex("Kindredid");

                    b.HasIndex("Kledid");

                    b.HasIndex("KogMawid");

                    b.HasIndex("LeBlancid");

                    b.HasIndex("LeeSinid");

                    b.HasIndex("Leonaid");

                    b.HasIndex("Lilliaid");

                    b.HasIndex("Lissandraid");

                    b.HasIndex("Lucianid");

                    b.HasIndex("Luluid");

                    b.HasIndex("Luxid");

                    b.HasIndex("Malphiteid");

                    b.HasIndex("Malzaharid");

                    b.HasIndex("Maokaiid");

                    b.HasIndex("MasterYiid");

                    b.HasIndex("MissFortuneid");

                    b.HasIndex("MonkeyKingid");

                    b.HasIndex("Mordekaiserid");

                    b.HasIndex("Morganaid");

                    b.HasIndex("Namiid");

                    b.HasIndex("Nasusid");

                    b.HasIndex("Nautilusid");

                    b.HasIndex("Neekoid");

                    b.HasIndex("Nidaleeid");

                    b.HasIndex("Nocturneid");

                    b.HasIndex("Nunuid");

                    b.HasIndex("Olafid");

                    b.HasIndex("Oriannaid");

                    b.HasIndex("Ornnid");

                    b.HasIndex("Pantheonid");

                    b.HasIndex("Poppyid");

                    b.HasIndex("Pykeid");

                    b.HasIndex("Qiyanaid");

                    b.HasIndex("Quinnid");

                    b.HasIndex("Rakanid");

                    b.HasIndex("Rammusid");

                    b.HasIndex("RekSaiid");

                    b.HasIndex("Rellid");

                    b.HasIndex("Renektonid");

                    b.HasIndex("Rengarid");

                    b.HasIndex("Rivenid");

                    b.HasIndex("Rumbleid");

                    b.HasIndex("Ryzeid");

                    b.HasIndex("Samiraid");

                    b.HasIndex("Sejuaniid");

                    b.HasIndex("Sennaid");

                    b.HasIndex("Seraphineid");

                    b.HasIndex("Settid");

                    b.HasIndex("Shacoid");

                    b.HasIndex("Shenid");

                    b.HasIndex("Shyvanaid");

                    b.HasIndex("Singedid");

                    b.HasIndex("Sionid");

                    b.HasIndex("Sivirid");

                    b.HasIndex("Skarnerid");

                    b.HasIndex("Sonaid");

                    b.HasIndex("Sorakaid");

                    b.HasIndex("Swainid");

                    b.HasIndex("Sylasid");

                    b.HasIndex("Syndraid");

                    b.HasIndex("TahmKenchid");

                    b.HasIndex("Taliyahid");

                    b.HasIndex("Talonid");

                    b.HasIndex("Taricid");

                    b.HasIndex("Teemoid");

                    b.HasIndex("Threshid");

                    b.HasIndex("Tristanaid");

                    b.HasIndex("Trundleid");

                    b.HasIndex("Tryndamereid");

                    b.HasIndex("TwistedFateid");

                    b.HasIndex("Twitchid");

                    b.HasIndex("Udyrid");

                    b.HasIndex("Urgotid");

                    b.HasIndex("Varusid");

                    b.HasIndex("Vayneid");

                    b.HasIndex("Veigarid");

                    b.HasIndex("VelKozid");

                    b.HasIndex("Viegoid");

                    b.HasIndex("Viid");

                    b.HasIndex("Viktorid");

                    b.HasIndex("Vladimirid");

                    b.HasIndex("Volibearid");

                    b.HasIndex("Warwickid");

                    b.HasIndex("Xayahid");

                    b.HasIndex("Xerathid");

                    b.HasIndex("XinZhaoid");

                    b.HasIndex("Yasuoid");

                    b.HasIndex("Yoneid");

                    b.HasIndex("Yorickid");

                    b.HasIndex("Yuumiid");

                    b.HasIndex("Zacid");

                    b.HasIndex("Zedid");

                    b.HasIndex("Ziggsid");

                    b.HasIndex("Zileanid");

                    b.HasIndex("Zoeid");

                    b.HasIndex("Zyraid");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.EnemyTips", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId");

                    b.ToTable("enemyytypes");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("full")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("h")
                        .HasColumnType("float");

                    b.Property<string>("sprite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("w")
                        .HasColumnType("float");

                    b.Property<double>("x")
                        .HasColumnType("float");

                    b.Property<double>("y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId")
                        .IsUnique()
                        .HasFilter("[ChampionId] IS NOT NULL");

                    b.ToTable("image");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.ImageSpells", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SpellsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("full")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("h")
                        .HasColumnType("float");

                    b.Property<string>("sprite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("w")
                        .HasColumnType("float");

                    b.Property<double>("x")
                        .HasColumnType("float");

                    b.Property<double>("y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SpellsId")
                        .IsUnique()
                        .HasFilter("[SpellsId] IS NOT NULL");

                    b.ToTable("imageSpells");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("attack")
                        .HasColumnType("int");

                    b.Property<int>("defense")
                        .HasColumnType("int");

                    b.Property<int>("difficulty")
                        .HasColumnType("int");

                    b.Property<int>("magic")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId")
                        .IsUnique()
                        .HasFilter("[ChampionId] IS NOT NULL");

                    b.ToTable("info");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Passive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId")
                        .IsUnique()
                        .HasFilter("[ChampionId] IS NOT NULL");

                    b.ToTable("passive");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Skins", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChampionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("chromas")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("num")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ChampionId");

                    b.ToTable("Skins");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Spells", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChampionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tooltip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ChampionId");

                    b.ToTable("spells");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Stats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("armor")
                        .HasColumnType("float");

                    b.Property<double>("armorperlevel")
                        .HasColumnType("float");

                    b.Property<double>("attackdamage")
                        .HasColumnType("float");

                    b.Property<double>("attackdamageperlevel")
                        .HasColumnType("float");

                    b.Property<double>("attackrange")
                        .HasColumnType("float");

                    b.Property<double>("attackspeed")
                        .HasColumnType("float");

                    b.Property<double>("attackspeedperlevel")
                        .HasColumnType("float");

                    b.Property<double>("crit")
                        .HasColumnType("float");

                    b.Property<double>("critperlevel")
                        .HasColumnType("float");

                    b.Property<double>("hp")
                        .HasColumnType("float");

                    b.Property<double>("hpperlevel")
                        .HasColumnType("float");

                    b.Property<double>("hpregen")
                        .HasColumnType("float");

                    b.Property<double>("hpregenperlevel")
                        .HasColumnType("float");

                    b.Property<double>("movespeed")
                        .HasColumnType("float");

                    b.Property<double>("mp")
                        .HasColumnType("float");

                    b.Property<double>("mpperlevel")
                        .HasColumnType("float");

                    b.Property<double>("mpregen")
                        .HasColumnType("float");

                    b.Property<double>("mpregenperlevel")
                        .HasColumnType("float");

                    b.Property<double>("spellblock")
                        .HasColumnType("float");

                    b.Property<double>("spellblockperlevel")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId")
                        .IsUnique()
                        .HasFilter("[ChampionId] IS NOT NULL");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Tags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("Marvel_API.Models.ImagePassive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PassiveId")
                        .HasColumnType("int");

                    b.Property<string>("full")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("h")
                        .HasColumnType("float");

                    b.Property<string>("sprite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("w")
                        .HasColumnType("float");

                    b.Property<double>("x")
                        .HasColumnType("float");

                    b.Property<double>("y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PassiveId")
                        .IsUnique();

                    b.ToTable("imagePassive");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.AllyTips", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Champion", null)
                        .WithMany("allytips")
                        .HasForeignKey("ChampionId");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Champions", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Champion", "Aatrox")
                        .WithMany()
                        .HasForeignKey("Aatroxid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Ahri")
                        .WithMany()
                        .HasForeignKey("Ahriid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Akali")
                        .WithMany()
                        .HasForeignKey("Akaliid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Alistar")
                        .WithMany()
                        .HasForeignKey("Alistarid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Amumu")
                        .WithMany()
                        .HasForeignKey("Amumuid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Anivia")
                        .WithMany()
                        .HasForeignKey("Aniviaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Annie")
                        .WithMany()
                        .HasForeignKey("Annieid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Aphelios")
                        .WithMany()
                        .HasForeignKey("Apheliosid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Ashe")
                        .WithMany()
                        .HasForeignKey("Asheid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "AurelionSol")
                        .WithMany()
                        .HasForeignKey("AurelionSolid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Azir")
                        .WithMany()
                        .HasForeignKey("Azirid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Bard")
                        .WithMany()
                        .HasForeignKey("Bardid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Blitzcrank")
                        .WithMany()
                        .HasForeignKey("Blitzcrankid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Brand")
                        .WithMany()
                        .HasForeignKey("Brandid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Braum")
                        .WithMany()
                        .HasForeignKey("Braumid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Caitlyn")
                        .WithMany()
                        .HasForeignKey("Caitlynid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Camille")
                        .WithMany()
                        .HasForeignKey("Camilleid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Cassiopeia")
                        .WithMany()
                        .HasForeignKey("Cassiopeiaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Chogath")
                        .WithMany()
                        .HasForeignKey("Chogathid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Corki")
                        .WithMany()
                        .HasForeignKey("Corkiid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Darius")
                        .WithMany()
                        .HasForeignKey("Dariusid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Diana")
                        .WithMany()
                        .HasForeignKey("Dianaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "DrMundo")
                        .WithMany()
                        .HasForeignKey("DrMundoid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Draven")
                        .WithMany()
                        .HasForeignKey("Dravenid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Ekko")
                        .WithMany()
                        .HasForeignKey("Ekkoid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Elise")
                        .WithMany()
                        .HasForeignKey("Eliseid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Evelynn")
                        .WithMany()
                        .HasForeignKey("Evelynnid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Ezreal")
                        .WithMany()
                        .HasForeignKey("Ezrealid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Fiddlesticks")
                        .WithMany()
                        .HasForeignKey("Fiddlesticksid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Fiora")
                        .WithMany()
                        .HasForeignKey("Fioraid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Fizz")
                        .WithMany()
                        .HasForeignKey("Fizzid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Galio")
                        .WithMany()
                        .HasForeignKey("Galioid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Gangplank")
                        .WithMany()
                        .HasForeignKey("Gangplankid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Garen")
                        .WithMany()
                        .HasForeignKey("Garenid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Gnar")
                        .WithMany()
                        .HasForeignKey("Gnarid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Gragas")
                        .WithMany()
                        .HasForeignKey("Gragasid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Graves")
                        .WithMany()
                        .HasForeignKey("Gravesid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Hecarim")
                        .WithMany()
                        .HasForeignKey("Hecarimid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Heimerdinger")
                        .WithMany()
                        .HasForeignKey("Heimerdingerid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Illaoi")
                        .WithMany()
                        .HasForeignKey("Illaoiid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Irelia")
                        .WithMany()
                        .HasForeignKey("Ireliaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Ivern")
                        .WithMany()
                        .HasForeignKey("Ivernid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Janna")
                        .WithMany()
                        .HasForeignKey("Jannaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "JarvanIV")
                        .WithMany()
                        .HasForeignKey("JarvanIVid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Jax")
                        .WithMany()
                        .HasForeignKey("Jaxid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Jayce")
                        .WithMany()
                        .HasForeignKey("Jayceid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Jhin")
                        .WithMany()
                        .HasForeignKey("Jhinid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Jinx")
                        .WithMany()
                        .HasForeignKey("Jinxid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "KaiSa")
                        .WithMany()
                        .HasForeignKey("KaiSaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Kalista")
                        .WithMany()
                        .HasForeignKey("Kalistaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Karma")
                        .WithMany()
                        .HasForeignKey("Karmaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Karthus")
                        .WithMany()
                        .HasForeignKey("Karthusid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Kassadin")
                        .WithMany()
                        .HasForeignKey("Kassadinid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Katarina")
                        .WithMany()
                        .HasForeignKey("Katarinaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Kayle")
                        .WithMany()
                        .HasForeignKey("Kayleid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Kayn")
                        .WithMany()
                        .HasForeignKey("Kaynid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Kennen")
                        .WithMany()
                        .HasForeignKey("Kennenid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Khazix")
                        .WithMany()
                        .HasForeignKey("Khazixid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Kindred")
                        .WithMany()
                        .HasForeignKey("Kindredid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Kled")
                        .WithMany()
                        .HasForeignKey("Kledid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "KogMaw")
                        .WithMany()
                        .HasForeignKey("KogMawid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "LeBlanc")
                        .WithMany()
                        .HasForeignKey("LeBlancid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "LeeSin")
                        .WithMany()
                        .HasForeignKey("LeeSinid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Leona")
                        .WithMany()
                        .HasForeignKey("Leonaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Lillia")
                        .WithMany()
                        .HasForeignKey("Lilliaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Lissandra")
                        .WithMany()
                        .HasForeignKey("Lissandraid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Lucian")
                        .WithMany()
                        .HasForeignKey("Lucianid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Lulu")
                        .WithMany()
                        .HasForeignKey("Luluid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Lux")
                        .WithMany()
                        .HasForeignKey("Luxid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Malphite")
                        .WithMany()
                        .HasForeignKey("Malphiteid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Malzahar")
                        .WithMany()
                        .HasForeignKey("Malzaharid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Maokai")
                        .WithMany()
                        .HasForeignKey("Maokaiid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "MasterYi")
                        .WithMany()
                        .HasForeignKey("MasterYiid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "MissFortune")
                        .WithMany()
                        .HasForeignKey("MissFortuneid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "MonkeyKing")
                        .WithMany()
                        .HasForeignKey("MonkeyKingid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Mordekaiser")
                        .WithMany()
                        .HasForeignKey("Mordekaiserid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Morgana")
                        .WithMany()
                        .HasForeignKey("Morganaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Nami")
                        .WithMany()
                        .HasForeignKey("Namiid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Nasus")
                        .WithMany()
                        .HasForeignKey("Nasusid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Nautilus")
                        .WithMany()
                        .HasForeignKey("Nautilusid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Neeko")
                        .WithMany()
                        .HasForeignKey("Neekoid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Nidalee")
                        .WithMany()
                        .HasForeignKey("Nidaleeid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Nocturne")
                        .WithMany()
                        .HasForeignKey("Nocturneid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Nunu")
                        .WithMany()
                        .HasForeignKey("Nunuid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Olaf")
                        .WithMany()
                        .HasForeignKey("Olafid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Orianna")
                        .WithMany()
                        .HasForeignKey("Oriannaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Ornn")
                        .WithMany()
                        .HasForeignKey("Ornnid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Pantheon")
                        .WithMany()
                        .HasForeignKey("Pantheonid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Poppy")
                        .WithMany()
                        .HasForeignKey("Poppyid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Pyke")
                        .WithMany()
                        .HasForeignKey("Pykeid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Qiyana")
                        .WithMany()
                        .HasForeignKey("Qiyanaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Quinn")
                        .WithMany()
                        .HasForeignKey("Quinnid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Rakan")
                        .WithMany()
                        .HasForeignKey("Rakanid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Rammus")
                        .WithMany()
                        .HasForeignKey("Rammusid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "RekSai")
                        .WithMany()
                        .HasForeignKey("RekSaiid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Rell")
                        .WithMany()
                        .HasForeignKey("Rellid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Renekton")
                        .WithMany()
                        .HasForeignKey("Renektonid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Rengar")
                        .WithMany()
                        .HasForeignKey("Rengarid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Riven")
                        .WithMany()
                        .HasForeignKey("Rivenid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Rumble")
                        .WithMany()
                        .HasForeignKey("Rumbleid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Ryze")
                        .WithMany()
                        .HasForeignKey("Ryzeid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Samira")
                        .WithMany()
                        .HasForeignKey("Samiraid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Sejuani")
                        .WithMany()
                        .HasForeignKey("Sejuaniid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Senna")
                        .WithMany()
                        .HasForeignKey("Sennaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Seraphine")
                        .WithMany()
                        .HasForeignKey("Seraphineid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Sett")
                        .WithMany()
                        .HasForeignKey("Settid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Shaco")
                        .WithMany()
                        .HasForeignKey("Shacoid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Shen")
                        .WithMany()
                        .HasForeignKey("Shenid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Shyvana")
                        .WithMany()
                        .HasForeignKey("Shyvanaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Singed")
                        .WithMany()
                        .HasForeignKey("Singedid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Sion")
                        .WithMany()
                        .HasForeignKey("Sionid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Sivir")
                        .WithMany()
                        .HasForeignKey("Sivirid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Skarner")
                        .WithMany()
                        .HasForeignKey("Skarnerid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Sona")
                        .WithMany()
                        .HasForeignKey("Sonaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Soraka")
                        .WithMany()
                        .HasForeignKey("Sorakaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Swain")
                        .WithMany()
                        .HasForeignKey("Swainid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Sylas")
                        .WithMany()
                        .HasForeignKey("Sylasid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Syndra")
                        .WithMany()
                        .HasForeignKey("Syndraid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "TahmKench")
                        .WithMany()
                        .HasForeignKey("TahmKenchid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Taliyah")
                        .WithMany()
                        .HasForeignKey("Taliyahid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Talon")
                        .WithMany()
                        .HasForeignKey("Talonid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Taric")
                        .WithMany()
                        .HasForeignKey("Taricid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Teemo")
                        .WithMany()
                        .HasForeignKey("Teemoid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Thresh")
                        .WithMany()
                        .HasForeignKey("Threshid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Tristana")
                        .WithMany()
                        .HasForeignKey("Tristanaid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Trundle")
                        .WithMany()
                        .HasForeignKey("Trundleid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Tryndamere")
                        .WithMany()
                        .HasForeignKey("Tryndamereid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "TwistedFate")
                        .WithMany()
                        .HasForeignKey("TwistedFateid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Twitch")
                        .WithMany()
                        .HasForeignKey("Twitchid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Udyr")
                        .WithMany()
                        .HasForeignKey("Udyrid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Urgot")
                        .WithMany()
                        .HasForeignKey("Urgotid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Varus")
                        .WithMany()
                        .HasForeignKey("Varusid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Vayne")
                        .WithMany()
                        .HasForeignKey("Vayneid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Veigar")
                        .WithMany()
                        .HasForeignKey("Veigarid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "VelKoz")
                        .WithMany()
                        .HasForeignKey("VelKozid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Viego")
                        .WithMany()
                        .HasForeignKey("Viegoid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Vi")
                        .WithMany()
                        .HasForeignKey("Viid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Viktor")
                        .WithMany()
                        .HasForeignKey("Viktorid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Vladimir")
                        .WithMany()
                        .HasForeignKey("Vladimirid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Volibear")
                        .WithMany()
                        .HasForeignKey("Volibearid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Warwick")
                        .WithMany()
                        .HasForeignKey("Warwickid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Xayah")
                        .WithMany()
                        .HasForeignKey("Xayahid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Xerath")
                        .WithMany()
                        .HasForeignKey("Xerathid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "XinZhao")
                        .WithMany()
                        .HasForeignKey("XinZhaoid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Yasuo")
                        .WithMany()
                        .HasForeignKey("Yasuoid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Yone")
                        .WithMany()
                        .HasForeignKey("Yoneid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Yorick")
                        .WithMany()
                        .HasForeignKey("Yorickid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Yuumi")
                        .WithMany()
                        .HasForeignKey("Yuumiid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Zac")
                        .WithMany()
                        .HasForeignKey("Zacid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Zed")
                        .WithMany()
                        .HasForeignKey("Zedid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Ziggs")
                        .WithMany()
                        .HasForeignKey("Ziggsid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Zilean")
                        .WithMany()
                        .HasForeignKey("Zileanid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Zoe")
                        .WithMany()
                        .HasForeignKey("Zoeid");

                    b.HasOne("Marvel_API.Models.Champions.Champion", "Zyra")
                        .WithMany()
                        .HasForeignKey("Zyraid");

                    b.Navigation("Aatrox");

                    b.Navigation("Ahri");

                    b.Navigation("Akali");

                    b.Navigation("Alistar");

                    b.Navigation("Amumu");

                    b.Navigation("Anivia");

                    b.Navigation("Annie");

                    b.Navigation("Aphelios");

                    b.Navigation("Ashe");

                    b.Navigation("AurelionSol");

                    b.Navigation("Azir");

                    b.Navigation("Bard");

                    b.Navigation("Blitzcrank");

                    b.Navigation("Brand");

                    b.Navigation("Braum");

                    b.Navigation("Caitlyn");

                    b.Navigation("Camille");

                    b.Navigation("Cassiopeia");

                    b.Navigation("Chogath");

                    b.Navigation("Corki");

                    b.Navigation("Darius");

                    b.Navigation("Diana");

                    b.Navigation("Draven");

                    b.Navigation("DrMundo");

                    b.Navigation("Ekko");

                    b.Navigation("Elise");

                    b.Navigation("Evelynn");

                    b.Navigation("Ezreal");

                    b.Navigation("Fiddlesticks");

                    b.Navigation("Fiora");

                    b.Navigation("Fizz");

                    b.Navigation("Galio");

                    b.Navigation("Gangplank");

                    b.Navigation("Garen");

                    b.Navigation("Gnar");

                    b.Navigation("Gragas");

                    b.Navigation("Graves");

                    b.Navigation("Hecarim");

                    b.Navigation("Heimerdinger");

                    b.Navigation("Illaoi");

                    b.Navigation("Irelia");

                    b.Navigation("Ivern");

                    b.Navigation("Janna");

                    b.Navigation("JarvanIV");

                    b.Navigation("Jax");

                    b.Navigation("Jayce");

                    b.Navigation("Jhin");

                    b.Navigation("Jinx");

                    b.Navigation("KaiSa");

                    b.Navigation("Kalista");

                    b.Navigation("Karma");

                    b.Navigation("Karthus");

                    b.Navigation("Kassadin");

                    b.Navigation("Katarina");

                    b.Navigation("Kayle");

                    b.Navigation("Kayn");

                    b.Navigation("Kennen");

                    b.Navigation("Khazix");

                    b.Navigation("Kindred");

                    b.Navigation("Kled");

                    b.Navigation("KogMaw");

                    b.Navigation("LeBlanc");

                    b.Navigation("LeeSin");

                    b.Navigation("Leona");

                    b.Navigation("Lillia");

                    b.Navigation("Lissandra");

                    b.Navigation("Lucian");

                    b.Navigation("Lulu");

                    b.Navigation("Lux");

                    b.Navigation("Malphite");

                    b.Navigation("Malzahar");

                    b.Navigation("Maokai");

                    b.Navigation("MasterYi");

                    b.Navigation("MissFortune");

                    b.Navigation("MonkeyKing");

                    b.Navigation("Mordekaiser");

                    b.Navigation("Morgana");

                    b.Navigation("Nami");

                    b.Navigation("Nasus");

                    b.Navigation("Nautilus");

                    b.Navigation("Neeko");

                    b.Navigation("Nidalee");

                    b.Navigation("Nocturne");

                    b.Navigation("Nunu");

                    b.Navigation("Olaf");

                    b.Navigation("Orianna");

                    b.Navigation("Ornn");

                    b.Navigation("Pantheon");

                    b.Navigation("Poppy");

                    b.Navigation("Pyke");

                    b.Navigation("Qiyana");

                    b.Navigation("Quinn");

                    b.Navigation("Rakan");

                    b.Navigation("Rammus");

                    b.Navigation("RekSai");

                    b.Navigation("Rell");

                    b.Navigation("Renekton");

                    b.Navigation("Rengar");

                    b.Navigation("Riven");

                    b.Navigation("Rumble");

                    b.Navigation("Ryze");

                    b.Navigation("Samira");

                    b.Navigation("Sejuani");

                    b.Navigation("Senna");

                    b.Navigation("Seraphine");

                    b.Navigation("Sett");

                    b.Navigation("Shaco");

                    b.Navigation("Shen");

                    b.Navigation("Shyvana");

                    b.Navigation("Singed");

                    b.Navigation("Sion");

                    b.Navigation("Sivir");

                    b.Navigation("Skarner");

                    b.Navigation("Sona");

                    b.Navigation("Soraka");

                    b.Navigation("Swain");

                    b.Navigation("Sylas");

                    b.Navigation("Syndra");

                    b.Navigation("TahmKench");

                    b.Navigation("Taliyah");

                    b.Navigation("Talon");

                    b.Navigation("Taric");

                    b.Navigation("Teemo");

                    b.Navigation("Thresh");

                    b.Navigation("Tristana");

                    b.Navigation("Trundle");

                    b.Navigation("Tryndamere");

                    b.Navigation("TwistedFate");

                    b.Navigation("Twitch");

                    b.Navigation("Udyr");

                    b.Navigation("Urgot");

                    b.Navigation("Varus");

                    b.Navigation("Vayne");

                    b.Navigation("Veigar");

                    b.Navigation("VelKoz");

                    b.Navigation("Vi");

                    b.Navigation("Viego");

                    b.Navigation("Viktor");

                    b.Navigation("Vladimir");

                    b.Navigation("Volibear");

                    b.Navigation("Warwick");

                    b.Navigation("Xayah");

                    b.Navigation("Xerath");

                    b.Navigation("XinZhao");

                    b.Navigation("Yasuo");

                    b.Navigation("Yone");

                    b.Navigation("Yorick");

                    b.Navigation("Yuumi");

                    b.Navigation("Zac");

                    b.Navigation("Zed");

                    b.Navigation("Ziggs");

                    b.Navigation("Zilean");

                    b.Navigation("Zoe");

                    b.Navigation("Zyra");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.EnemyTips", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Champion", null)
                        .WithMany("enemytips")
                        .HasForeignKey("ChampionId");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Image", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Champion", null)
                        .WithOne("image")
                        .HasForeignKey("Marvel_API.Models.Champions.Image", "ChampionId");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.ImageSpells", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Spells", null)
                        .WithOne("image")
                        .HasForeignKey("Marvel_API.Models.Champions.ImageSpells", "SpellsId");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Info", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Champion", null)
                        .WithOne("info")
                        .HasForeignKey("Marvel_API.Models.Champions.Info", "ChampionId");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Passive", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Champion", null)
                        .WithOne("passive")
                        .HasForeignKey("Marvel_API.Models.Champions.Passive", "ChampionId");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Skins", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Champion", null)
                        .WithMany("skins")
                        .HasForeignKey("ChampionId");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Spells", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Champion", null)
                        .WithMany("spells")
                        .HasForeignKey("ChampionId");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Stats", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Champion", null)
                        .WithOne("stats")
                        .HasForeignKey("Marvel_API.Models.Champions.Stats", "ChampionId");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Tags", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Champion", null)
                        .WithMany("tags")
                        .HasForeignKey("ChampionId");
                });

            modelBuilder.Entity("Marvel_API.Models.ImagePassive", b =>
                {
                    b.HasOne("Marvel_API.Models.Champions.Passive", null)
                        .WithOne("image")
                        .HasForeignKey("Marvel_API.Models.ImagePassive", "PassiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Champion", b =>
                {
                    b.Navigation("allytips");

                    b.Navigation("enemytips");

                    b.Navigation("image");

                    b.Navigation("info");

                    b.Navigation("passive");

                    b.Navigation("skins");

                    b.Navigation("spells");

                    b.Navigation("stats");

                    b.Navigation("tags");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Passive", b =>
                {
                    b.Navigation("image");
                });

            modelBuilder.Entity("Marvel_API.Models.Champions.Spells", b =>
                {
                    b.Navigation("image");
                });
#pragma warning restore 612, 618
        }
    }
}
